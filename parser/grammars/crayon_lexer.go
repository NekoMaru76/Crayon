// Code generated from java-escape by ANTLR 4.11.1. DO NOT EDIT.

package parser

import (
	"fmt"
	"sync"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr/v4"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type CrayonLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var crayonlexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	channelNames           []string
	modeNames              []string
	literalNames           []string
	symbolicNames          []string
	ruleNames              []string
	predictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func crayonlexerLexerInit() {
	staticData := &crayonlexerLexerStaticData
	staticData.channelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.modeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.literalNames = []string{
		"", "'$'", "'='", "'#{'", "','", "'}'", "'#['", "']'", "'@('", "')'",
		"'('", "'@'", "'{'", "';'", "'['", "", "", "", "", "", "", "", "", "",
		"", "'~'",
	}
	staticData.symbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "NUMBER",
		"MAIN", "FRAME", "LOOP", "STRING", "NONE", "INFINITY", "YES", "NO",
		"PI", "END", "WS", "IDENTIFIER",
	}
	staticData.ruleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "NUMBER", "MAIN", "FRAME",
		"LOOP", "STRING", "NONE", "INFINITY", "YES", "NO", "PI", "END", "WS",
		"IDENTIFIER_START", "IDENTIFIER", "ESC", "A", "B", "C", "D", "E", "F",
		"G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T",
		"U", "V", "W", "X", "Y", "Z",
	}
	staticData.predictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 27, 299, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		2, 47, 7, 47, 2, 48, 7, 48, 2, 49, 7, 49, 2, 50, 7, 50, 2, 51, 7, 51, 2,
		52, 7, 52, 2, 53, 7, 53, 2, 54, 7, 54, 1, 0, 1, 0, 1, 1, 1, 1, 1, 2, 1,
		2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 7, 1,
		7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1,
		12, 1, 13, 1, 13, 1, 14, 4, 14, 144, 8, 14, 11, 14, 12, 14, 145, 1, 14,
		1, 14, 4, 14, 150, 8, 14, 11, 14, 12, 14, 151, 1, 14, 1, 14, 4, 14, 156,
		8, 14, 11, 14, 12, 14, 157, 1, 14, 4, 14, 161, 8, 14, 11, 14, 12, 14, 162,
		1, 14, 3, 14, 166, 8, 14, 3, 14, 168, 8, 14, 1, 15, 1, 15, 1, 15, 1, 15,
		1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1,
		17, 1, 17, 1, 18, 1, 18, 1, 18, 5, 18, 189, 8, 18, 10, 18, 12, 18, 192,
		9, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19, 1, 20, 1,
		20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21,
		1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 23, 1,
		23, 1, 24, 1, 24, 1, 25, 4, 25, 228, 8, 25, 11, 25, 12, 25, 229, 1, 25,
		1, 25, 1, 26, 3, 26, 235, 8, 26, 1, 27, 1, 27, 1, 27, 5, 27, 240, 8, 27,
		10, 27, 12, 27, 243, 9, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1,
		30, 1, 31, 1, 31, 1, 32, 1, 32, 1, 33, 1, 33, 1, 34, 1, 34, 1, 35, 1, 35,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 38, 1, 38, 1, 39, 1, 39, 1, 40, 1, 40, 1,
		41, 1, 41, 1, 42, 1, 42, 1, 43, 1, 43, 1, 44, 1, 44, 1, 45, 1, 45, 1, 46,
		1, 46, 1, 47, 1, 47, 1, 48, 1, 48, 1, 49, 1, 49, 1, 50, 1, 50, 1, 51, 1,
		51, 1, 52, 1, 52, 1, 53, 1, 53, 1, 54, 1, 54, 0, 0, 55, 1, 1, 3, 2, 5,
		3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25,
		13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43,
		22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 0, 55, 27, 57, 0, 59, 0, 61, 0,
		63, 0, 65, 0, 67, 0, 69, 0, 71, 0, 73, 0, 75, 0, 77, 0, 79, 0, 81, 0, 83,
		0, 85, 0, 87, 0, 89, 0, 91, 0, 93, 0, 95, 0, 97, 0, 99, 0, 101, 0, 103,
		0, 105, 0, 107, 0, 109, 0, 1, 0, 31, 1, 0, 48, 57, 2, 0, 34, 34, 92, 92,
		3, 0, 9, 10, 13, 13, 32, 32, 3, 0, 65, 90, 95, 95, 97, 122, 3, 0, 34, 34,
		39, 39, 92, 92, 2, 0, 65, 65, 97, 97, 2, 0, 66, 66, 98, 98, 2, 0, 67, 67,
		99, 99, 2, 0, 68, 68, 100, 100, 2, 0, 69, 69, 101, 101, 2, 0, 70, 70, 102,
		102, 2, 0, 71, 71, 103, 103, 2, 0, 72, 72, 104, 104, 2, 0, 73, 73, 105,
		105, 2, 0, 74, 74, 106, 106, 2, 0, 75, 75, 107, 107, 2, 0, 76, 76, 108,
		108, 2, 0, 77, 77, 109, 109, 2, 0, 78, 78, 110, 110, 2, 0, 79, 79, 111,
		111, 2, 0, 80, 80, 112, 112, 2, 0, 81, 81, 113, 113, 2, 0, 82, 82, 114,
		114, 2, 0, 83, 83, 115, 115, 2, 0, 84, 84, 116, 116, 2, 0, 85, 85, 117,
		117, 2, 0, 86, 86, 118, 118, 2, 0, 87, 87, 119, 119, 2, 0, 88, 88, 120,
		120, 2, 0, 89, 89, 121, 121, 2, 0, 90, 90, 122, 122, 282, 0, 1, 1, 0, 0,
		0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0,
		0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0,
		0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1,
		0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33,
		1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0,
		41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0,
		0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 1, 111, 1, 0,
		0, 0, 3, 113, 1, 0, 0, 0, 5, 115, 1, 0, 0, 0, 7, 118, 1, 0, 0, 0, 9, 120,
		1, 0, 0, 0, 11, 122, 1, 0, 0, 0, 13, 125, 1, 0, 0, 0, 15, 127, 1, 0, 0,
		0, 17, 130, 1, 0, 0, 0, 19, 132, 1, 0, 0, 0, 21, 134, 1, 0, 0, 0, 23, 136,
		1, 0, 0, 0, 25, 138, 1, 0, 0, 0, 27, 140, 1, 0, 0, 0, 29, 167, 1, 0, 0,
		0, 31, 169, 1, 0, 0, 0, 33, 174, 1, 0, 0, 0, 35, 180, 1, 0, 0, 0, 37, 185,
		1, 0, 0, 0, 39, 195, 1, 0, 0, 0, 41, 201, 1, 0, 0, 0, 43, 211, 1, 0, 0,
		0, 45, 216, 1, 0, 0, 0, 47, 220, 1, 0, 0, 0, 49, 224, 1, 0, 0, 0, 51, 227,
		1, 0, 0, 0, 53, 234, 1, 0, 0, 0, 55, 236, 1, 0, 0, 0, 57, 244, 1, 0, 0,
		0, 59, 247, 1, 0, 0, 0, 61, 249, 1, 0, 0, 0, 63, 251, 1, 0, 0, 0, 65, 253,
		1, 0, 0, 0, 67, 255, 1, 0, 0, 0, 69, 257, 1, 0, 0, 0, 71, 259, 1, 0, 0,
		0, 73, 261, 1, 0, 0, 0, 75, 263, 1, 0, 0, 0, 77, 265, 1, 0, 0, 0, 79, 267,
		1, 0, 0, 0, 81, 269, 1, 0, 0, 0, 83, 271, 1, 0, 0, 0, 85, 273, 1, 0, 0,
		0, 87, 275, 1, 0, 0, 0, 89, 277, 1, 0, 0, 0, 91, 279, 1, 0, 0, 0, 93, 281,
		1, 0, 0, 0, 95, 283, 1, 0, 0, 0, 97, 285, 1, 0, 0, 0, 99, 287, 1, 0, 0,
		0, 101, 289, 1, 0, 0, 0, 103, 291, 1, 0, 0, 0, 105, 293, 1, 0, 0, 0, 107,
		295, 1, 0, 0, 0, 109, 297, 1, 0, 0, 0, 111, 112, 5, 36, 0, 0, 112, 2, 1,
		0, 0, 0, 113, 114, 5, 61, 0, 0, 114, 4, 1, 0, 0, 0, 115, 116, 5, 35, 0,
		0, 116, 117, 5, 123, 0, 0, 117, 6, 1, 0, 0, 0, 118, 119, 5, 44, 0, 0, 119,
		8, 1, 0, 0, 0, 120, 121, 5, 125, 0, 0, 121, 10, 1, 0, 0, 0, 122, 123, 5,
		35, 0, 0, 123, 124, 5, 91, 0, 0, 124, 12, 1, 0, 0, 0, 125, 126, 5, 93,
		0, 0, 126, 14, 1, 0, 0, 0, 127, 128, 5, 64, 0, 0, 128, 129, 5, 40, 0, 0,
		129, 16, 1, 0, 0, 0, 130, 131, 5, 41, 0, 0, 131, 18, 1, 0, 0, 0, 132, 133,
		5, 40, 0, 0, 133, 20, 1, 0, 0, 0, 134, 135, 5, 64, 0, 0, 135, 22, 1, 0,
		0, 0, 136, 137, 5, 123, 0, 0, 137, 24, 1, 0, 0, 0, 138, 139, 5, 59, 0,
		0, 139, 26, 1, 0, 0, 0, 140, 141, 5, 91, 0, 0, 141, 28, 1, 0, 0, 0, 142,
		144, 7, 0, 0, 0, 143, 142, 1, 0, 0, 0, 144, 145, 1, 0, 0, 0, 145, 143,
		1, 0, 0, 0, 145, 146, 1, 0, 0, 0, 146, 147, 1, 0, 0, 0, 147, 149, 5, 46,
		0, 0, 148, 150, 7, 0, 0, 0, 149, 148, 1, 0, 0, 0, 150, 151, 1, 0, 0, 0,
		151, 149, 1, 0, 0, 0, 151, 152, 1, 0, 0, 0, 152, 168, 1, 0, 0, 0, 153,
		155, 5, 46, 0, 0, 154, 156, 7, 0, 0, 0, 155, 154, 1, 0, 0, 0, 156, 157,
		1, 0, 0, 0, 157, 155, 1, 0, 0, 0, 157, 158, 1, 0, 0, 0, 158, 168, 1, 0,
		0, 0, 159, 161, 7, 0, 0, 0, 160, 159, 1, 0, 0, 0, 161, 162, 1, 0, 0, 0,
		162, 160, 1, 0, 0, 0, 162, 163, 1, 0, 0, 0, 163, 165, 1, 0, 0, 0, 164,
		166, 5, 46, 0, 0, 165, 164, 1, 0, 0, 0, 165, 166, 1, 0, 0, 0, 166, 168,
		1, 0, 0, 0, 167, 143, 1, 0, 0, 0, 167, 153, 1, 0, 0, 0, 167, 160, 1, 0,
		0, 0, 168, 30, 1, 0, 0, 0, 169, 170, 3, 83, 41, 0, 170, 171, 3, 59, 29,
		0, 171, 172, 3, 75, 37, 0, 172, 173, 3, 85, 42, 0, 173, 32, 1, 0, 0, 0,
		174, 175, 3, 69, 34, 0, 175, 176, 3, 93, 46, 0, 176, 177, 3, 59, 29, 0,
		177, 178, 3, 83, 41, 0, 178, 179, 3, 67, 33, 0, 179, 34, 1, 0, 0, 0, 180,
		181, 3, 81, 40, 0, 181, 182, 3, 87, 43, 0, 182, 183, 3, 87, 43, 0, 183,
		184, 3, 89, 44, 0, 184, 36, 1, 0, 0, 0, 185, 190, 5, 34, 0, 0, 186, 189,
		3, 57, 28, 0, 187, 189, 8, 1, 0, 0, 188, 186, 1, 0, 0, 0, 188, 187, 1,
		0, 0, 0, 189, 192, 1, 0, 0, 0, 190, 188, 1, 0, 0, 0, 190, 191, 1, 0, 0,
		0, 191, 193, 1, 0, 0, 0, 192, 190, 1, 0, 0, 0, 193, 194, 5, 34, 0, 0, 194,
		38, 1, 0, 0, 0, 195, 196, 5, 35, 0, 0, 196, 197, 3, 85, 42, 0, 197, 198,
		3, 87, 43, 0, 198, 199, 3, 85, 42, 0, 199, 200, 3, 67, 33, 0, 200, 40,
		1, 0, 0, 0, 201, 202, 5, 35, 0, 0, 202, 203, 3, 75, 37, 0, 203, 204, 3,
		85, 42, 0, 204, 205, 3, 69, 34, 0, 205, 206, 3, 75, 37, 0, 206, 207, 3,
		85, 42, 0, 207, 208, 3, 75, 37, 0, 208, 209, 3, 97, 48, 0, 209, 210, 3,
		107, 53, 0, 210, 42, 1, 0, 0, 0, 211, 212, 5, 35, 0, 0, 212, 213, 3, 107,
		53, 0, 213, 214, 3, 67, 33, 0, 214, 215, 3, 95, 47, 0, 215, 44, 1, 0, 0,
		0, 216, 217, 5, 35, 0, 0, 217, 218, 3, 85, 42, 0, 218, 219, 3, 87, 43,
		0, 219, 46, 1, 0, 0, 0, 220, 221, 5, 35, 0, 0, 221, 222, 3, 89, 44, 0,
		222, 223, 3, 75, 37, 0, 223, 48, 1, 0, 0, 0, 224, 225, 5, 126, 0, 0, 225,
		50, 1, 0, 0, 0, 226, 228, 7, 2, 0, 0, 227, 226, 1, 0, 0, 0, 228, 229, 1,
		0, 0, 0, 229, 227, 1, 0, 0, 0, 229, 230, 1, 0, 0, 0, 230, 231, 1, 0, 0,
		0, 231, 232, 6, 25, 0, 0, 232, 52, 1, 0, 0, 0, 233, 235, 7, 3, 0, 0, 234,
		233, 1, 0, 0, 0, 235, 54, 1, 0, 0, 0, 236, 241, 3, 53, 26, 0, 237, 240,
		3, 53, 26, 0, 238, 240, 7, 0, 0, 0, 239, 237, 1, 0, 0, 0, 239, 238, 1,
		0, 0, 0, 240, 243, 1, 0, 0, 0, 241, 239, 1, 0, 0, 0, 241, 242, 1, 0, 0,
		0, 242, 56, 1, 0, 0, 0, 243, 241, 1, 0, 0, 0, 244, 245, 5, 92, 0, 0, 245,
		246, 7, 4, 0, 0, 246, 58, 1, 0, 0, 0, 247, 248, 7, 5, 0, 0, 248, 60, 1,
		0, 0, 0, 249, 250, 7, 6, 0, 0, 250, 62, 1, 0, 0, 0, 251, 252, 7, 7, 0,
		0, 252, 64, 1, 0, 0, 0, 253, 254, 7, 8, 0, 0, 254, 66, 1, 0, 0, 0, 255,
		256, 7, 9, 0, 0, 256, 68, 1, 0, 0, 0, 257, 258, 7, 10, 0, 0, 258, 70, 1,
		0, 0, 0, 259, 260, 7, 11, 0, 0, 260, 72, 1, 0, 0, 0, 261, 262, 7, 12, 0,
		0, 262, 74, 1, 0, 0, 0, 263, 264, 7, 13, 0, 0, 264, 76, 1, 0, 0, 0, 265,
		266, 7, 14, 0, 0, 266, 78, 1, 0, 0, 0, 267, 268, 7, 15, 0, 0, 268, 80,
		1, 0, 0, 0, 269, 270, 7, 16, 0, 0, 270, 82, 1, 0, 0, 0, 271, 272, 7, 17,
		0, 0, 272, 84, 1, 0, 0, 0, 273, 274, 7, 18, 0, 0, 274, 86, 1, 0, 0, 0,
		275, 276, 7, 19, 0, 0, 276, 88, 1, 0, 0, 0, 277, 278, 7, 20, 0, 0, 278,
		90, 1, 0, 0, 0, 279, 280, 7, 21, 0, 0, 280, 92, 1, 0, 0, 0, 281, 282, 7,
		22, 0, 0, 282, 94, 1, 0, 0, 0, 283, 284, 7, 23, 0, 0, 284, 96, 1, 0, 0,
		0, 285, 286, 7, 24, 0, 0, 286, 98, 1, 0, 0, 0, 287, 288, 7, 25, 0, 0, 288,
		100, 1, 0, 0, 0, 289, 290, 7, 26, 0, 0, 290, 102, 1, 0, 0, 0, 291, 292,
		7, 27, 0, 0, 292, 104, 1, 0, 0, 0, 293, 294, 7, 28, 0, 0, 294, 106, 1,
		0, 0, 0, 295, 296, 7, 29, 0, 0, 296, 108, 1, 0, 0, 0, 297, 298, 7, 30,
		0, 0, 298, 110, 1, 0, 0, 0, 13, 0, 145, 151, 157, 162, 165, 167, 188, 190,
		229, 234, 239, 241, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// CrayonLexerInit initializes any static state used to implement CrayonLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewCrayonLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func CrayonLexerInit() {
	staticData := &crayonlexerLexerStaticData
	staticData.once.Do(crayonlexerLexerInit)
}

// NewCrayonLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewCrayonLexer(input antlr.CharStream) *CrayonLexer {
	CrayonLexerInit()
	l := new(CrayonLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &crayonlexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.predictionContextCache)
	l.channelNames = staticData.channelNames
	l.modeNames = staticData.modeNames
	l.RuleNames = staticData.ruleNames
	l.LiteralNames = staticData.literalNames
	l.SymbolicNames = staticData.symbolicNames
	l.GrammarFileName = "Crayon.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// CrayonLexer tokens.
const (
	CrayonLexerT__0       = 1
	CrayonLexerT__1       = 2
	CrayonLexerT__2       = 3
	CrayonLexerT__3       = 4
	CrayonLexerT__4       = 5
	CrayonLexerT__5       = 6
	CrayonLexerT__6       = 7
	CrayonLexerT__7       = 8
	CrayonLexerT__8       = 9
	CrayonLexerT__9       = 10
	CrayonLexerT__10      = 11
	CrayonLexerT__11      = 12
	CrayonLexerT__12      = 13
	CrayonLexerT__13      = 14
	CrayonLexerNUMBER     = 15
	CrayonLexerMAIN       = 16
	CrayonLexerFRAME      = 17
	CrayonLexerLOOP       = 18
	CrayonLexerSTRING     = 19
	CrayonLexerNONE       = 20
	CrayonLexerINFINITY   = 21
	CrayonLexerYES        = 22
	CrayonLexerNO         = 23
	CrayonLexerPI         = 24
	CrayonLexerEND        = 25
	CrayonLexerWS         = 26
	CrayonLexerIDENTIFIER = 27
)
